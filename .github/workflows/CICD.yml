name: CI/CD FOR DEVELOP

on:
  push:
    branches:
      - develop

env:
  DOCKERHUB_REPOSITORY: test-server

jobs:
  CI:
    name: Continuous Integration
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Get short SHA
        id: slug
        run: echo "sha7=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_OUTPUT


      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Upload jar file to Artifact
        uses: actions/upload-artifact@v4
        with:
          name: jar_files
          path: build/libs/*.jar

      - name: Upload Dockerfile to Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Dockerfile
          path: ./Dockerfile

  CD_Delivery_to_DockerHub:
    name: CD_Delivery_to_DockerHub
    needs: CI
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Download jar file from Artifact
        uses: actions/download-artifact@v4
        with:
          name: jar_files
          path: build/libs

      - name: Download Dockerfile file from Artifact
        uses: actions/download-artifact@v4
        with:
          name: Dockerfile
          path: ./

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get short SHA
        id: slug
        run: echo "sha7=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Build, tag, and push image to DockerHub
        id: build-image
        env:
          USERNAME: ${{ secrets.DOCKER_USERNAME }}
          IMAGE_TAG: ${{ steps.slug.outputs.sha7 }}

        run: |
          docker build -t $USERNAME/$DOCKERHUB_REPOSITORY:$IMAGE_TAG -t $USERNAME/$DOCKERHUB_REPOSITORY:latest .
          docker push $USERNAME/$DOCKERHUB_REPOSITORY --all-tags
          echo "image=$USERNAME/$DOCKERHUB_REPOSITORY:$IMAGE_TAG&latest" >> $GITHUB_OUTPUT


  CD_Deploy:
    name: CD_Deploy
    needs: CD_Delivery_to_DockerHub
    runs-on: ubuntu-latest

    steps:
      - name: Get short SHA
        id: slug
        run: echo "sha7=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Executing remote ssh commands
        uses: appleboy/ssh-action@v0.1.6 # ssh 접속하는 오픈소스
        with:
          host: ${{ secrets.REMOTE_IP }} # 인스턴스 IP
          username: ${{ secrets.REMOTE_USER }} # 우분투 아이디
          key: ${{ secrets.REMOTE_PRIVATE_KEY }} # ec2 instance pem key
          port: ${{ secrets.REMOTE_SSH_PORT }} # 접속포트
          script: | # 실행할 스크립트
            export DOCKER_IMAGE=hyeonda02/test-server:latest
            cd /home/ubuntu/scripts
            ./rolling-update.sh